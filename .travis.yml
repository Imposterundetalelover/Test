language: cpp
dist: xenial
compiler:
  - gcc

addons:
  apt:
    packages:
      - g++
      - autotools-dev
      - automake
      - autoconf
      - autoconf-archive
      - libtool
      - pkg-config
      - libglib2.0-dev
      - libncurses5-dev
      - gpm
      - libgpm-dev
      - gperf
      - libcppunit-dev
  homebrew:
    packages:
      - autoconf-archive
    update: true

env:
  global:
  # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
  #   via the "travis encrypt" command using the project repo's public key
  - secure: |-
      wvCvMaIm7LoSyWHmpRXvJIetdMnJKsLLxuon6r6BSfpyimoz5FIMEhNhfSt2psv8tJHZgN
      /FcMcLhnTuTMIjvtlEtb3syfHDaNs7S2q3rm6LCmuIUU4ECAwAorkMQbXcyh5rgPlDMDiw
      CyBE8O1yFQebAFxRoP181+0uI2IiIP/8EW3P5PDSQzds+9fnnwrFS+OeBoUZfxT0F2kj2f
      kMXZN4+KmeVIrkqtj8hlRcicLgBPm4hrK5IEUcFLtAbzPj72wkV1duiYG6kqDsATmzMK0m
      5EuMhQ/nL/rbSjhrcRZzPFQ7P31ToSwg1I6cyhMjyXSbpwdppZ/RSwTpqDCdq9l4bDDmvI
      qizdwYZKcDtyHxm4Zl/LZKwWDsGEelcmuJKfdu+QuTgInGNlqulmDykvbsrk9jTimIzHTb
      F8TOn9IpANlTWmvunGeOarvR9qJReZcwSMq41hdMbsUdHiC1arZjKvINcPVuwikzaNq4iA
      te6mtSdrfdx1wLxQ6ZYNgKd9hz+uUTlBYl80hkATmq0NPnPQw2KzyG9E6nLrKOy2M0ozO8
      bL/epiiMBKJ37X1UcRU4WZYq+peLME8EefcPcXOSWNLwJtR7mtON8uMBrLL9CWmRMFD5Hy
      lQYALW2DhCnDBROKB3gxB/VkBGFNE0IPGeDtBGbLqDtKWPQoL125I=

jobs:
  include:
  #
  # Coverity Scan
  #
  - os: linux
    env:
      - TEST="Coverity Scan"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - ca-certificates
          - gcc
          - g++
          - gpm
          - libgpm-dev
          - libcppunit-dev
          - autoconf-archive
      coverity_scan:
        project:
          name: gansm/finalcut
          description: Build submitted via Travis CI
        notification_email: guru.mail@muenster.de
        build_command_prepend: "autoreconf -v --install --force && ./configure --prefix=/usr CPPFLAGS='-DDEBUG' CXXFLAGS='-g -O0 -DDEBUG -DUNIT_TEST' --with-unit-test && make clean"
        build_command: "make V=1 -j10"
        branch_pattern: main
    before_install:
      - lsb_release -a
      - uname -a
      - whoami
      - echo -n | openssl s_client -CApath /etc/ssl/certs/ -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt
    script:
      - cat /home/travis/build/gansm/finalcut/cov-int/scm_log.txt || echo
      - autoreconf -v --install --force
      - ./configure --prefix=/usr CPPFLAGS="-DDEBUG" CXXFLAGS="-g -O0 -DDEBUG -DUNIT_TEST" --with-unit-test
      - make V=1 -j10
      - make check
      - cat test/*.log || echo

  #
  # Coveralls + Codecov
  #
  - os: linux
    env:
      - TEST="Coveralls"
    before_install:
      - lsb_release -a
      - uname -a
      - pip install --user cpp-coveralls
      - sudo pip install codecov
    script:
      - ./build.sh coverage
    after_success:
      - coveralls --gcov-options '\-lp' -e debian -e doc -e icon -e logo -e m4 -e scripts -e examples
      - bash <(curl -s https://codecov.io/bash)

  #
  # SonarCloud
  #
  - os: linux
    env:
      - TEST="sonarcloud"
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - ca-certificates
          - gcc
          - g++
          - gpm
          - libgpm-dev
          - libcppunit-dev
          - autoconf-archive
      sonarcloud:
        organization: "gansm"
        token:
          secure: |-
            Vai4Z9BoLsCdrtra5bP/xM8uZnMLKXWS3AH0Z6NnP6bBIa7o9i44Hg5b80P5yL3w
            22NgZcX5BrPNhTFbbsulw+F8OdnDETV1bxrDkAVaLGlw+pVjBFNhwXZzyHTx7rsX
            GQ/5ry1gIclRlyUO6atW5zQsImAPkTuMv6fFzjgiN1z5vheOTjOKpKqVZNWOURJT
            kKgSqiPgHMlR8JLqlHJ/322YVjOOwTLNPrHV6/TrWFrIHI3nChYYX60394sTzKrv
            XkU0uvoiJts0cEk97AWcWEfq5TkF1X9604UOZRifNps9kfNZOHjgUuFUvvo3WE8W
            ek9LU/0Ec9kViJEASsSE6VzNXWDqu+VkqisJwchUkn6OxoDILSkJpceco/Rx4dAO
            phMSgXjCCsvz5igniVyFUixoBvGo4D1bLO6zZPDVxXMDMhpzQKqwqkJo6FYcl109
            rni9IuLvMFDAwUuzCbXlbjSPvdOoDiq+8NY1A0TOtTp4z4q9NCPr6TlCcKrazqnN
            Xz4Nxo8xZCHxaH7CaXjBmh91Wp5aIzbwJS9fg6A7e2Is1HJm9YW1j3akBjzT//kE
            GhOEiXesrPvH5c9XxyO8ZgnkYjNBAES/9aUn8NZBPgQqcUhWAAe1r9fH4iy3Zj+/
            26IUvLfJ05uf1yEAzR9/xDIJFF7Heg1FRtzd6IiAdQ4=
    script:
      - autoreconf -v --install --force
      - ./configure --prefix=/usr
      - build-wrapper-linux-x86-64 --out-dir bw-output make all
      - sonar-scanner
    cache:
      directories:
        - '$HOME/.sonar/cache'

  #
  # macOS
  #
  - os: osx
    osx_image: xcode11
    env:
      - TEST="macOS"
    before_install:
      - uname -a
      - g++ --version
    script:
      - autoreconf -v --install --force
      - ./configure --prefix=/usr
      - make -j10

  #
  # FreeBSD
  #
  - os: freebsd
    env:
      - TEST="FreeBSD"
    before_install:
      - uname -a
      - g++ --version
      - sudo pkg install -y autoconf-archive
    script:
      - autoreconf -v --install --force
      - ./configure --prefix=/usr
      - make -j10

  #
  # Linux ARM64 build
  #
  - arch: arm64
    os: linux
    env:
      - TEST="ARM64"
    before_install:
      - uname -a
      - g++ --version
    script:
      - autoreconf -v --install --force
      - ./configure --prefix=/usr
      - make -j10

